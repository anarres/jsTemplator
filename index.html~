<html>
<head>
<link rel="stylesheet" type="text/css" href="style.css">

<script type="text/javascript" src="models.js"></script>
<script type="text/javascript" src="controllers.js"></script>
<script type="text/javascript" src="betterSplit.js"></script>
<script type="text/javascript" src="json_parse.js"></script>
<script type="text/javascript" src="jscolor/jscolor.js"></script>
<script type="text/javascript">

function foo() {
    alert('foo!');
}

// Global vars
var repsFoo = [];
var pageRepsFoo = [];
var htmlFoo = "";
var fooStuff = "";

function preview() {

/*
    var menuHtml = "<ul>";
    for (var m=0; m<jstData.length; m++) {
        menuHtml += "<li><a href='";
        menuHtml += jstData["menu"][m]["relUrl"];
        menuHtml += "'>";
        menuHtml += jstData["menu"][m]["name"];
        menuHtml += "</a></li>";
    }
    menuHtml += "</ul>";

    var menuRep = new Replacement("menu", "Menu", menuHtml, "", "menu"];
*/
    // Update repsFoo & make replacements into htmlFoo
    for (var i=0; i<repsFoo.length; i++) {
        repsFoo[i].content = document.getElementById(repsFoo[i].shortName).value;
        if (repsFoo[i].inputType == "color") {
            repsFoo[i].content = "#" + repsFoo[i].content;
        }
        htmlFoo = replaceFoo(htmlFoo, repsFoo[i].startString, repsFoo[i].endString, repsFoo[i].content);
    }


    for (var r=0; r<pageRepsFoo.length; r++) {
        pageRepsFoo[r].content = document.getElementById(pageRepsFoo[r].shortName).value;


        htmlFoo = replaceFoo(htmlFoo, repsFoo[i].startString, repsFoo[i].endString, repsFoo[i].content);
    }



    var htmlOut = "data:text/html;charset=utf-8, " + escape(htmlFoo);
    window.open(htmlOut, '_blank');
}

function maliciousFish(fileText) {
    htmlFoo = fileText;

    // Get data
    var jstDataString = getData(fileText);

    // Parse data
    var jstData = JSON.parse(jstDataString);
    var reps = [];
    var pageReps = [];

    // Convert data to Replacement objects
    for (var j=0; j<jstData["replacements"].length; j++) {
        var r = new Replacement(jstData["replacements"][j]["shortName"], jstData["replacements"][j]["niceName"], "", jstData["replacements"][j]["inputType"], jstData["replacements"][j]["repType"]);
        r.getSetContent(fileText);
        reps.push(r);
    }
    var output = "";
    for (var i=0; i<reps.length; i++) {
        if (reps[i].shortName.slice(0,4) != "menu") {
            output += reps[i].userInputHTML();
        }
    }
    repsFoo = reps;
    document.getElementById('userInput').innerHTML = output;

    // Add the menu info
    pageOutput = "<p>Pages in this website: ";
    for (var n=0; n<jstData['menu'].length; n++) {
        pageOutput += jstData['menu'][n].name;
        pageOutput += ", ";
    }
    pageOutput += "</p>";

    for (var p=0; p<jstData['pageReplacements'].length; p++) {
        var pRep = new Replacement( jstData['pageReplacements'][p]["shortName"], jstData['pageReplacements'][p]["niceName"], "", jstData['pageReplacements'][p]["inputType"], jstData['pageReplacements'][p]["repType"]);
        pRep.getSetContent(fileText);
        pageReps.push(pRep);
    }
    pageRepsFoo = pageReps;

    for (var q=0; q<pageReps.length; q++) {
        pageOutput += pageReps[q].userInputHTML();
    }

    // New page button
    pageOutput += "<button onclick='newPage()'>Create a new page</button>";
    document.getElementById('pageUserInput').innerHTML = pageOutput;

    // Initialize the new jscolor widgets
    var colorArray = getElementsByClassName(document, 'color');
    for (var k=0; k<colorArray.length; k++) {
        new jscolor.color(colorArray[k], {});
    }
}

function squidAndSharks() {

    // Get files
    var files = document.getElementById('fileselect').files;
    fooStuff = "";

    // For each file
    for (var i=0; i<files.length; i++) {
        var fileInfo = "Name: " + files[i].name + ", Type: " + files[i].type + ", Size: " + files[i].size;

        var reader = new FileReader();
        reader.onload = function(event) {
            var fileContents = event.target.result;
            maliciousFish(fileContents);
        };
        reader.onerror = function(event) {
            alert("File could not be read! Code " + event.target.error.code);
        };
        reader.readAsText(files[i]);
    }
}

function newPage() {
    foo();
}
function toSiteView() {
    document.getElementById('page').style.visibility = "hidden";
    document.getElementById('wholeSite').style.visibility = "visible";
}
function toPageView() {
    document.getElementById('wholeSite').style.visibility = "hidden";
    document.getElementById('page').style.visibility = "visible";
}

</script>

</head>

<body>

<div id="container">

<h1>Foofurple simple website editor</h1>

<button onclick="toSiteView()">Edit whole website</button>
<button onclick="toPageView()">Edit individual pages</button>
<button onclick="preview()">Preview</button><br><br>

<div>
	<label for="fileselect">To work on an existing project, please upload project files:</label>
	<input id="fileselect" name="fileselect[]" multiple="multiple" type="file" onchange="squidAndSharks()" />
</div>

<div id="wholeSite" style="position:absolute;visibility:visible;">

    <div id="userInput">

    </div> <!--#userInput-->
</div> <!--#wholeSite-->

<div id="page" style="position:absolute;visibility:hidden;">

    <div id="pageUserInput">

    </div> <!--#pageUserInput-->

</div> <!--#page-->

</div> <!--#container-->

</body>
</html>
